{"ast":null,"code":"var _jsxFileName = \"/Users/politemakwala/Location-Tracker-by-GEOINT/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\n// main app component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const mapContainer = useRef(null);\n  const fileInputRef = useRef(null);\n  const [locations, setLocations] = useState([]);\n  const [newLocation, setNewLocation] = useState({\n    name: '',\n    category: '',\n    latitude: '',\n    longitude: ''\n  });\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [uploadErrors, setUploadErrors] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [addStatus, setAddStatus] = useState('');\n  const [addError, setAddError] = useState('');\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const popupRef = useRef(null);\n  const [mapStyle, setMapStyle] = useState('satellite'); // Changed from 'normal' to 'satellite'\n  const MAPTILER_KEY = 'Mzz4D0DNC0EOqwMrDxc6';\n  const map = useRef(null);\n  const mapStyles = {\n    normal: 'https://demotiles.maplibre.org/style.json',\n    satellite: `https://api.maptiler.com/maps/basic-v2/style.json?key=${MAPTILER_KEY}`\n  };\n  useEffect(() => {\n    if (map.current) return;\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: mapStyles[mapStyle],\n      center: [28.0473, -26.1072],\n      // Center on Sandton\n      zoom: 15.5,\n      pitch: 45,\n      bearing: -17.6,\n      container: 'map',\n      canvasContextAttributes: {\n        antialias: true\n      }\n    });\n    map.current.on('load', () => {\n      fetchLocations();\n      const layers = map.current.getStyle().layers;\n      let labelLayerId;\n      for (let i = 0; i < layers.length; i++) {\n        if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {\n          labelLayerId = layers[i].id;\n          break;\n        }\n      }\n      map.current.addLayer({}, labelLayerId);\n    });\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n      }\n    };\n  }, []);\n  // toggle map style between normal and satellite view\n  const toggleMapStyle = () => {\n    const newStyle = mapStyle === 'normal' ? 'satellite' : 'normal';\n    setMapStyle(newStyle);\n\n    // Remove existing source and layer if they exist\n    if (map.current.getSource('locations')) {\n      if (map.current.getLayer('locations')) {\n        map.current.removeLayer('locations');\n      }\n      map.current.removeSource('locations');\n    }\n\n    // Set the new style\n    map.current.setStyle(mapStyles[newStyle]);\n\n    // Re-add the locations layer after style change\n    map.current.on('style.load', () => {\n      if (locations.length > 0) {\n        map.current.addSource('locations', {\n          type: 'geojson',\n          data: {\n            type: 'FeatureCollection',\n            features: locations\n          }\n        });\n        map.current.addLayer({\n          'id': '3d-buildings',\n          'source': 'openmaptiles',\n          'source-layer': 'building',\n          'type': 'fill-extrusion',\n          'minzoom': 15,\n          'filter': ['!=', ['get', 'hide_3d'], true],\n          'paint': {\n            'fill-extrusion-color': ['interpolate', ['linear'], ['get', 'render_height'], 0, 'lightgray', 200, 'royalblue', 400, 'lightblue'],\n            'fill-extrusion-height': ['interpolate', ['linear'], ['zoom'], 15, 0, 16, ['get', 'render_height']],\n            'fill-extrusion-base': ['case', ['>=', ['get', 'zoom'], 16], ['get', 'render_min_height'], 0]\n          }\n        });\n\n        // If there's a selected location, re-add its popup\n        if (selectedLocation) {\n          if (popupRef.current) {\n            popupRef.current.remove();\n          }\n          popupRef.current = new maplibregl.Popup({\n            offset: 25\n          }).setLngLat(selectedLocation.geometry.coordinates).setHTML(`\n              <div class=\"p-2\">\n                <h3 class=\"font-bold\">${selectedLocation.properties.name}</h3>\n                <p class=\"text-sm\">${selectedLocation.properties.category}</p>\n                <p class=\"text-xs text-gray-600\">\n                  Coordinates: ${selectedLocation.geometry.coordinates[1]}, ${selectedLocation.geometry.coordinates[0]}\n                </p>\n              </div>\n            `);\n          popupRef.current.addTo(map.current);\n        }\n      }\n    });\n  };\n  // fetch locations from backend and display on map\n  const fetchLocations = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/locations/geojson');\n      const data = await response.json();\n      setLocations(data.features);\n      if (map.current) {\n        if (map.current.getSource('locations')) {\n          map.current.getSource('locations').setData(data);\n        } else {\n          map.current.addSource('locations', {\n            type: 'geojson',\n            data: data\n          });\n          map.current.addLayer({\n            id: 'locations',\n            type: 'circle',\n            source: 'locations',\n            paint: {\n              'circle-radius': 6,\n              'circle-color': '#B42222'\n            }\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching locations:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setAddStatus('');\n    setAddError('');\n\n    // Simple validation of all fields\n    if (!newLocation.name || !newLocation.category || !newLocation.latitude || !newLocation.longitude) {\n      setAddError('All fields are required.');\n      return;\n    }\n\n    // Convert string values to numbers for latitude and longitude\n    const locationData = {\n      name: newLocation.name,\n      category: newLocation.category,\n      latitude: parseFloat(newLocation.latitude),\n      longitude: parseFloat(newLocation.longitude)\n    };\n    // validate latitude and longitude\n    if (isNaN(locationData.latitude) || isNaN(locationData.longitude)) {\n      setAddError('Latitude and Longitude must be valid numbers.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8000/locations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(locationData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Failed to add location');\n      }\n      const result = await response.json();\n      setAddStatus('Location added successfully!');\n      setNewLocation({\n        name: '',\n        category: '',\n        latitude: '',\n        longitude: ''\n      });\n      fetchLocations();\n    } catch (error) {\n      console.error('Error adding location:', error);\n      setAddError(error.message || 'Error adding location');\n    }\n  };\n  // select file from local machine\n  const handleFileSelect = e => {\n    const file = e.target.files[0];\n    if (file) {\n      if (!file.name.endsWith('.csv')) {\n        setUploadStatus('Please select a CSV file');\n        setUploadErrors([]);\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setUploadStatus('File selected: ' + file.name);\n      setUploadErrors([]);\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setUploadStatus('Please select a file first');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    // upload file to backend\n    try {\n      setUploadStatus('Uploading...');\n      setUploadErrors([]);\n      const response = await fetch('http://localhost:8000/import', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      if (result.error) {\n        setUploadStatus('Error: ' + result.error);\n        setUploadErrors([]);\n      } else {\n        setUploadStatus(`Successfully imported ${result.imported} locations`);\n        if (result.errors && result.errors.length > 0) {\n          setUploadErrors(result.errors);\n        }\n        if (fileInputRef.current) {\n          fileInputRef.current.value = '';\n        }\n        setSelectedFile(null);\n      }\n      fetchLocations();\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setUploadStatus('Error uploading file');\n      setUploadErrors([]);\n    }\n  };\n  // \n  const handleClearAll = async () => {\n    if (!window.confirm('Are you sure you want to delete all locations? This action cannot be undone.')) {\n      return;\n    }\n    // clear all locations\n    try {\n      const response = await fetch('http://localhost:8000/locations', {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to clear locations');\n      }\n      // Set the locations to an empty array\n      setLocations([]);\n      if (map.current && map.current.getSource('locations')) {\n        map.current.getSource('locations').setData({\n          type: 'FeatureCollection',\n          features: []\n        });\n      }\n      if (popupRef.current) {\n        popupRef.current.remove();\n        popupRef.current = null;\n      }\n      setSelectedLocation(null);\n    } catch (error) {\n      console.error('Error clearing locations:', error);\n      alert('Failed to clear locations. Please try again.');\n    }\n  };\n  const handleLocationClick = location => {\n    setSelectedLocation(location);\n\n    // Remove existing popup if any\n    if (popupRef.current) {\n      popupRef.current.remove();\n    }\n\n    // Create new popup\n    popupRef.current = new maplibregl.Popup({\n      offset: 25\n    }).setLngLat(location.geometry.coordinates).setHTML(`\n        <div class=\"p-2\">\n          <h3 class=\"font-bold\">${location.properties.name}</h3>\n          <p class=\"text-sm\">${location.properties.category}</p>\n          <p class=\"text-xs text-gray-600\">\n            Coordinates: ${location.geometry.coordinates[1]}, ${location.geometry.coordinates[0]}\n          </p>\n        </div>\n      `);\n\n    // Add popup to map\n    popupRef.current.addTo(map.current);\n\n    // Fly to location\n    map.current.flyTo({\n      center: location.geometry.coordinates,\n      zoom: 15,\n      essential: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-7xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-gray-900 mb-6\",\n      children: \"Location Tracker by Geoint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapContainer,\n        className: \"map-container mb-6\",\n        style: {\n          height: '500px'\n        },\n        id: \"map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMapStyle,\n        className: \"absolute top-4 right-4 bg-white px-4 py-2 rounded-md shadow-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n        children: mapStyle === 'normal' ? 'Satellite View' : 'Normal View'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-gray-900 mb-4\",\n            children: \"Add New Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Name\",\n              value: newLocation.name,\n              onChange: e => setNewLocation({\n                ...newLocation,\n                name: e.target.value\n              }),\n              className: \"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Category\",\n              value: newLocation.category,\n              onChange: e => setNewLocation({\n                ...newLocation,\n                category: e.target.value\n              }),\n              className: \"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Latitude\",\n              value: newLocation.latitude,\n              onChange: e => setNewLocation({\n                ...newLocation,\n                latitude: e.target.value\n              }),\n              className: \"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Longitude\",\n              value: newLocation.longitude,\n              onChange: e => setNewLocation({\n                ...newLocation,\n                longitude: e.target.value\n              }),\n              className: \"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\",\n              children: \"Add Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), addStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 p-2 bg-green-100 text-green-800 rounded\",\n              children: addStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), addError && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 p-2 bg-red-100 text-red-800 rounded\",\n              children: addError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-gray-900 mb-4\",\n            children: \"Import Locations from CSV(POI)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ref: fileInputRef,\n                type: \"file\",\n                accept: \".csv\",\n                onChange: handleFileSelect,\n                className: \"flex-1 px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleUpload,\n                disabled: !selectedFile,\n                className: `px-6 py-2 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-offset-2 ${selectedFile ? 'bg-green-600 hover:bg-green-700 focus:ring-green-500' : 'bg-gray-400 cursor-not-allowed'}`,\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-4 rounded-md ${uploadStatus.includes('Error') ? 'bg-red-50 text-red-700' : 'bg-green-50 text-green-700'}`,\n              children: uploadStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this), uploadErrors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-orange-50 p-4 rounded-md text-orange-700\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-semibold mb-2\",\n                children: \"Import Warnings:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-disc list-inside space-y-1\",\n                children: uploadErrors.map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: error\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: \"CSV format: Name,Category,Latitude,Longitude\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-900 mb-4\",\n          children: \"Locations List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this), locations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClearAll,\n            className: \"w-full bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2\",\n            children: \"Clear All Locations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-3\",\n          children: locations.map(loc => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleLocationClick(loc),\n            className: `p-4 rounded-md hover:bg-gray-100 transition-colors cursor-pointer ${(selectedLocation === null || selectedLocation === void 0 ? void 0 : selectedLocation.properties.id) === loc.properties.id ? 'bg-blue-50 border border-blue-200' : 'bg-gray-50'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium text-gray-900\",\n              children: loc.properties.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: loc.properties.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: [\"Coordinates: \", loc.geometry.coordinates[1], \", \", loc.geometry.coordinates[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this)]\n          }, loc.properties.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uuwbgi/LRnP0Jx3BGnTSJ/27KzQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","maplibregl","jsxDEV","_jsxDEV","App","_s","mapContainer","fileInputRef","locations","setLocations","newLocation","setNewLocation","name","category","latitude","longitude","uploadStatus","setUploadStatus","uploadErrors","setUploadErrors","selectedFile","setSelectedFile","addStatus","setAddStatus","addError","setAddError","selectedLocation","setSelectedLocation","popupRef","mapStyle","setMapStyle","MAPTILER_KEY","map","mapStyles","normal","satellite","current","Map","container","style","center","zoom","pitch","bearing","canvasContextAttributes","antialias","on","fetchLocations","layers","getStyle","labelLayerId","i","length","type","layout","id","addLayer","remove","toggleMapStyle","newStyle","getSource","getLayer","removeLayer","removeSource","setStyle","addSource","data","features","Popup","offset","setLngLat","geometry","coordinates","setHTML","properties","addTo","response","fetch","json","setData","source","paint","error","console","handleSubmit","e","preventDefault","locationData","parseFloat","isNaN","method","headers","body","JSON","stringify","ok","errorData","Error","detail","result","message","handleFileSelect","file","target","files","endsWith","handleUpload","formData","FormData","append","imported","errors","value","handleClearAll","window","confirm","alert","handleLocationClick","location","flyTo","essential","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","height","onClick","onSubmit","placeholder","onChange","accept","disabled","includes","index","loc","_c","$RefreshReg$"],"sources":["/Users/politemakwala/Location-Tracker-by-GEOINT/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\n // main app component\nfunction App() {\n  const mapContainer = useRef(null);\n \n  const fileInputRef = useRef(null);\n  const [locations, setLocations] = useState([]);\n  const [newLocation, setNewLocation] = useState({ name: '', category: '', latitude: '', longitude: '' });\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [uploadErrors, setUploadErrors] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [addStatus, setAddStatus] = useState('');\n  const [addError, setAddError] = useState('');\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const popupRef = useRef(null);\n  const [mapStyle, setMapStyle] = useState('satellite'); // Changed from 'normal' to 'satellite'\n  const MAPTILER_KEY = 'Mzz4D0DNC0EOqwMrDxc6';\n  const map = useRef(null);\n\n  const mapStyles = {\n    normal: 'https://demotiles.maplibre.org/style.json',\n    satellite: `https://api.maptiler.com/maps/basic-v2/style.json?key=${MAPTILER_KEY}`\n  };\n\n  useEffect(() => {\n    if (map.current) return;\n\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: mapStyles[mapStyle],\n      center: [28.0473, -26.1072], // Center on Sandton\n      zoom: 15.5,\n      pitch: 45,\n      bearing: -17.6,\n      container: 'map',\n      canvasContextAttributes: {antialias: true}\n    });\n\n    map.current.on('load', () => {\n      fetchLocations();\n      const layers = map.current.getStyle().layers;\n\n      let labelLayerId;\n      for (let i = 0; i < layers.length; i++) {\n          if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {\n              labelLayerId = layers[i].id;\n              break;\n          }\n      }\n      map.current.addLayer(\n        {\n            \n        },\n        labelLayerId\n    );\n    });\n\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n      }\n    };\n  }, []);\n   // toggle map style between normal and satellite view\n  const toggleMapStyle = () => {\n    const newStyle = mapStyle === 'normal' ? 'satellite' : 'normal';\n    setMapStyle(newStyle);\n    \n    // Remove existing source and layer if they exist\n    if (map.current.getSource('locations')) {\n      if (map.current.getLayer('locations')) {\n        map.current.removeLayer('locations');\n      }\n      map.current.removeSource('locations');\n    }\n\n    // Set the new style\n    map.current.setStyle(mapStyles[newStyle]);\n    \n    // Re-add the locations layer after style change\n    map.current.on('style.load', () => {\n      if (locations.length > 0) {\n        map.current.addSource('locations', {\n          type: 'geojson',\n          data: {\n            type: 'FeatureCollection',\n            features: locations\n          }\n        });\n\n        map.current.addLayer({\n         'id': '3d-buildings',\n            'source': 'openmaptiles',\n            'source-layer': 'building',\n            'type': 'fill-extrusion',\n            'minzoom': 15,\n            'filter': ['!=', ['get', 'hide_3d'], true],\n            'paint': {\n                'fill-extrusion-color': [\n                    'interpolate',\n                    ['linear'],\n                    ['get', 'render_height'], 0, 'lightgray', 200, 'royalblue', 400, 'lightblue'\n                ],\n                'fill-extrusion-height': [\n                    'interpolate',\n                    ['linear'],\n                    ['zoom'],\n                    15,\n                    0,\n                    16,\n                    ['get', 'render_height']\n                ],\n                'fill-extrusion-base': ['case',\n                    ['>=', ['get', 'zoom'], 16],\n                    ['get', 'render_min_height'], 0\n                ]\n            }\n        });\n\n        // If there's a selected location, re-add its popup\n        if (selectedLocation) {\n          if (popupRef.current) {\n            popupRef.current.remove();\n          }\n          popupRef.current = new maplibregl.Popup({ offset: 25 })\n            .setLngLat(selectedLocation.geometry.coordinates)\n            .setHTML(`\n              <div class=\"p-2\">\n                <h3 class=\"font-bold\">${selectedLocation.properties.name}</h3>\n                <p class=\"text-sm\">${selectedLocation.properties.category}</p>\n                <p class=\"text-xs text-gray-600\">\n                  Coordinates: ${selectedLocation.geometry.coordinates[1]}, ${selectedLocation.geometry.coordinates[0]}\n                </p>\n              </div>\n            `);\n          popupRef.current.addTo(map.current);\n        }\n      }\n    });\n  };\n  // fetch locations from backend and display on map\n  const fetchLocations = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/locations/geojson');\n      const data = await response.json();\n      setLocations(data.features);\n\n      if (map.current) {\n        if (map.current.getSource('locations')) {\n          map.current.getSource('locations').setData(data);\n        } else {\n          map.current.addSource('locations', {\n            type: 'geojson',\n            data: data\n          });\n\n          map.current.addLayer({\n            id: 'locations',\n            type: 'circle',\n            source: 'locations',\n            paint: {\n              'circle-radius': 6,\n              'circle-color': '#B42222'\n            }\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching locations:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setAddStatus('');\n    setAddError('');\n    \n    // Simple validation of all fields\n    if (!newLocation.name || !newLocation.category || !newLocation.latitude || !newLocation.longitude) {\n      setAddError('All fields are required.');\n      return;\n    }\n    \n    // Convert string values to numbers for latitude and longitude\n    const locationData = {\n      name: newLocation.name,\n      category: newLocation.category,\n      latitude: parseFloat(newLocation.latitude),\n      longitude: parseFloat(newLocation.longitude)\n    };\n    // validate latitude and longitude\n    if (isNaN(locationData.latitude) || isNaN(locationData.longitude)) {\n      setAddError('Latitude and Longitude must be valid numbers.');\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:8000/locations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(locationData)\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Failed to add location');\n      }\n\n      const result = await response.json();\n      setAddStatus('Location added successfully!');\n      setNewLocation({ name: '', category: '', latitude: '', longitude: '' });\n      fetchLocations();\n    } catch (error) {\n      console.error('Error adding location:', error);\n      setAddError(error.message || 'Error adding location');\n    }\n  };\n  // select file from local machine\n  const handleFileSelect = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (!file.name.endsWith('.csv')) {\n        setUploadStatus('Please select a CSV file');\n        setUploadErrors([]);\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setUploadStatus('File selected: ' + file.name);\n      setUploadErrors([]);\n    }\n  };\n  \n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setUploadStatus('Please select a file first');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    // upload file to backend\n    try {\n      setUploadStatus('Uploading...');\n      setUploadErrors([]);\n      const response = await fetch('http://localhost:8000/import', {\n        method: 'POST',\n        body: formData,\n      });\n      const result = await response.json();\n      \n      if (result.error) {\n        setUploadStatus('Error: ' + result.error);\n        setUploadErrors([]);\n      } else {\n        setUploadStatus(`Successfully imported ${result.imported} locations`);\n        if (result.errors && result.errors.length > 0) {\n          setUploadErrors(result.errors);\n        }\n        if (fileInputRef.current) {\n          fileInputRef.current.value = '';\n        }\n        setSelectedFile(null);\n      }\n      fetchLocations();\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setUploadStatus('Error uploading file');\n      setUploadErrors([]);\n    }\n  };\n   // \n  const handleClearAll = async () => {\n    if (!window.confirm('Are you sure you want to delete all locations? This action cannot be undone.')) {\n      return;\n    }\n   // clear all locations\n    try {\n      const response = await fetch('http://localhost:8000/locations', {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to clear locations');\n      }\n      // Set the locations to an empty array\n      setLocations([]);\n      if (map.current && map.current.getSource('locations')) {\n        map.current.getSource('locations').setData({\n          type: 'FeatureCollection',\n          features: []\n        });\n      }\n      if (popupRef.current) {\n        popupRef.current.remove();\n        popupRef.current = null;\n      }\n      setSelectedLocation(null);\n    } catch (error) {\n      console.error('Error clearing locations:', error);\n      alert('Failed to clear locations. Please try again.');\n    }\n  };\n\n  const handleLocationClick = (location) => {\n    setSelectedLocation(location);\n    \n    // Remove existing popup if any\n    if (popupRef.current) {\n      popupRef.current.remove();\n    }\n\n    // Create new popup\n    popupRef.current = new maplibregl.Popup({ offset: 25 })\n      .setLngLat(location.geometry.coordinates)\n      .setHTML(`\n        <div class=\"p-2\">\n          <h3 class=\"font-bold\">${location.properties.name}</h3>\n          <p class=\"text-sm\">${location.properties.category}</p>\n          <p class=\"text-xs text-gray-600\">\n            Coordinates: ${location.geometry.coordinates[1]}, ${location.geometry.coordinates[0]}\n          </p>\n        </div>\n      `);\n\n    // Add popup to map\n    popupRef.current.addTo(map.current);\n\n    // Fly to location\n    map.current.flyTo({\n      center: location.geometry.coordinates,\n      zoom: 15,\n      essential: true\n    });\n  }\n\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto\">\n      <h1 className=\"text-3xl font-bold text-gray-900 mb-6\">Location Tracker by Geoint</h1>\n      \n      <div className=\"relative\">\n        <div ref={mapContainer} className=\"map-container mb-6\" style={{ height: '500px' }} id=\"map\"/>\n        <button\n          onClick={toggleMapStyle}\n          className=\"absolute top-4 right-4 bg-white px-4 py-2 rounded-md shadow-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        >\n          {mapStyle === 'normal' ? 'Satellite View' : 'Normal View'}\n        </button>\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"space-y-6\">\n          <div className=\"bg-white p-6 rounded-lg shadow-sm\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Add New Location</h2>\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <input\n                type=\"text\"\n                placeholder=\"Name\"\n                value={newLocation.name}\n                onChange={(e) => setNewLocation({ ...newLocation, name: e.target.value })}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Category\"\n                value={newLocation.category}\n                onChange={(e) => setNewLocation({ ...newLocation, category: e.target.value })}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n              <input\n                type=\"number\"\n                placeholder=\"Latitude\"\n                value={newLocation.latitude}\n                onChange={(e) => setNewLocation({ ...newLocation, latitude: e.target.value })}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n              <input\n                type=\"number\"\n                placeholder=\"Longitude\"\n                value={newLocation.longitude}\n                onChange={(e) => setNewLocation({ ...newLocation, longitude: e.target.value })}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n              <button \n                type=\"submit\"\n                className=\"w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n              >\n                Add Location\n              </button>\n              {addStatus && (\n                <div className=\"mt-2 p-2 bg-green-100 text-green-800 rounded\">{addStatus}</div>\n              )}\n              {addError && (\n                <div className=\"mt-2 p-2 bg-red-100 text-red-800 rounded\">{addError}</div>\n              )}\n            </form>\n          </div>\n       \n          <div className=\"bg-white p-6 rounded-lg shadow-sm\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Import Locations from CSV(POI)</h2>\n            <div className=\"space-y-4\">\n              <div className=\"flex gap-4\">\n                <input\n                  ref={fileInputRef}\n                  type=\"file\"\n                  accept=\".csv\"\n                  onChange={handleFileSelect}\n                  className=\"flex-1 px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n                <button\n                  onClick={handleUpload}\n                  disabled={!selectedFile}\n                  className={`px-6 py-2 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-offset-2 ${\n                    selectedFile \n                      ? 'bg-green-600 hover:bg-green-700 focus:ring-green-500' \n                      : 'bg-gray-400 cursor-not-allowed'\n                  }`}\n                >\n                  Upload\n                </button>\n              </div>\n              \n              {uploadStatus && (\n                <div className={`p-4 rounded-md ${\n                  uploadStatus.includes('Error') \n                    ? 'bg-red-50 text-red-700' \n                    : 'bg-green-50 text-green-700'\n                }`}>\n                  {uploadStatus}\n                </div>\n              )}\n              \n              {uploadErrors.length > 0 && (\n                <div className=\"bg-orange-50 p-4 rounded-md text-orange-700\">\n                  <h4 className=\"font-semibold mb-2\">Import Warnings:</h4>\n                  <ul className=\"list-disc list-inside space-y-1\">\n                    {uploadErrors.map((error, index) => (\n                      <li key={index}>{error}</li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n              \n              <div className=\"text-sm text-gray-500\">\n                CSV format: Name,Category,Latitude,Longitude\n              </div>\n            </div>\n          </div>\n        </div>\n \n        <div className=\"bg-white p-6 rounded-lg shadow-sm\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Locations List</h2>\n          {locations.length > 0 && (\n            <div className=\"mb-4\">\n              <button\n                onClick={handleClearAll}\n                className=\"w-full bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2\"\n              >\n                Clear All Locations\n              </button>\n            </div>\n          )}\n          <ul className=\"space-y-3\">\n            {locations.map(loc => (\n              <li \n                key={loc.properties.id}\n                onClick={() => handleLocationClick(loc)}\n                className={`p-4 rounded-md hover:bg-gray-100 transition-colors cursor-pointer ${\n                  selectedLocation?.properties.id === loc.properties.id \n                    ? 'bg-blue-50 border border-blue-200' \n                    : 'bg-gray-50'\n                }`}\n              >\n                <div className=\"font-medium text-gray-900\">{loc.properties.name}</div>\n                <div className=\"text-sm text-gray-600\">{loc.properties.category}</div>\n                <div className=\"text-sm text-gray-500\">\n                  Coordinates: {loc.geometry.coordinates[1]}, {loc.geometry.coordinates[0]}\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}