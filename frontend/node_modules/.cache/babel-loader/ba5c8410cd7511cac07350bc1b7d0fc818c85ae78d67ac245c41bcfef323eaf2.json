{"ast":null,"code":"var _jsxFileName = \"/Users/politemakwala/Location-Tracker-by-GEOINT/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\n// main app component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const mapContainer = useRef(null);\n  const fileInputRef = useRef(null);\n  const [locations, setLocations] = useState([]);\n  const [newLocation, setNewLocation] = useState({\n    name: '',\n    category: '',\n    latitude: '',\n    longitude: ''\n  });\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [uploadErrors, setUploadErrors] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [addStatus, setAddStatus] = useState('');\n  const [addError, setAddError] = useState('');\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [isGettingLocation, setIsGettingLocation] = useState(false);\n  const popupRef = useRef(null);\n  const [mapStyle, setMapStyle] = useState('satellite'); // Changed from 'normal' to 'satellite'\n  const MAPTILER_KEY = 'Mzz4D0DNC0EOqwMrDxc6';\n  const map = useRef(null);\n  const mapStyles = {\n    normal: 'https://demotiles.maplibre.org/style.json',\n    satellite: `https://api.maptiler.com/maps/basic-v2/style.json?key=${MAPTILER_KEY}`\n  };\n  useEffect(() => {\n    if (map.current) return;\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: mapStyles[mapStyle],\n      center: [28.0473, -26.1072],\n      // Center on Sandton\n      zoom: 15.5,\n      pitch: 45,\n      bearing: -17.6,\n      container: 'map',\n      canvasContextAttributes: {\n        antialias: true\n      }\n    });\n    map.current.on('load', () => {\n      fetchLocations();\n      const layers = map.current.getStyle().layers;\n      let labelLayerId;\n      for (let i = 0; i < layers.length; i++) {\n        if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {\n          labelLayerId = layers[i].id;\n          break;\n        }\n      }\n    });\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n      }\n    };\n  }, []);\n  // toggle map style between normal and satellite view\n  const toggleMapStyle = () => {\n    // Remove existing source and layer if they exist\n    const layers = map.current.getStyle().layers;\n    let labelLayerId;\n    for (let i = 0; i < layers.length; i++) {\n      if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {\n        labelLayerId = layers[i].id;\n        break;\n      }\n    }\n\n    // Re-add the locations layer after style change\n    map.current.on('style.load', () => {\n      if (locations.length > 0) {\n        map.current.addSource('locations', {\n          type: 'fill-extrusion',\n          data: {\n            type: 'FeatureCollection',\n            features: locations\n          }\n        });\n        map.current.addSource('openmaptiles', {\n          url: `https://api.maptiler.com/tiles/v3/tiles.json?key=${MAPTILER_KEY}`,\n          type: 'vector'\n        });\n        map.current.addLayer({\n          'id': '3d-buildings',\n          'source': 'openmaptiles',\n          'source-layer': 'building',\n          'type': 'fill-extrusion',\n          'minzoom': 15,\n          'filter': ['!=', ['get', 'hide_3d'], true],\n          'paint': {\n            'fill-extrusion-color': ['interpolate', ['linear'], ['get', 'render_height'], 6, 'lightgray', 200, 'royalblue', 400, 'lightblue'],\n            'fill-extrusion-height': ['interpolate', ['linear'], ['zoom'], 15, 0, 16, ['get', 'render_height']],\n            'fill-extrusion-base': ['case', ['>=', ['get', 'zoom'], 16], ['get', 'render_min_height'], 0]\n          }\n        });\n\n        // If there's a selected location, re-add its popup\n        if (selectedLocation) {\n          if (popupRef.current) {\n            popupRef.current.remove();\n          }\n          popupRef.current = new maplibregl.Popup({\n            offset: 25\n          }).setLngLat(selectedLocation.geometry.coordinates).setHTML(`\n              <div class=\"p-2\">\n                <h3 class=\"font-bold\">${selectedLocation.properties.name}</h3>\n                <p class=\"text-sm\">${selectedLocation.properties.category}</p>\n                <p class=\"text-xs text-gray-600\">\n                  Coordinates: ${selectedLocation.geometry.coordinates[1]}, ${selectedLocation.geometry.coordinates[0]}\n                </p>\n              </div>\n            `);\n          popupRef.current.addTo(map.current);\n        }\n      }\n    });\n  };\n  // fetch locations from backend and display on map\n  const fetchLocations = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/locations/geojson');\n      const data = await response.json();\n      setLocations(data.features);\n      if (map.current) {\n        if (map.current.getSource('locations')) {\n          map.current.getSource('locations').setData(data);\n        } else {\n          map.current.addSource('locations', {\n            type: 'geojson',\n            data: data\n          });\n          map.current.addLayer({\n            id: 'locations',\n            type: 'circle',\n            source: 'locations',\n            paint: {\n              'circle-radius': 6,\n              'circle-color': '#B42222'\n            }\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching locations:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setAddStatus('');\n    setAddError('');\n\n    // Simple validation of all fields\n    if (!newLocation.name || !newLocation.category || !newLocation.latitude || !newLocation.longitude) {\n      setAddError('All fields are required.');\n      return;\n    }\n\n    // Convert string values to numbers for latitude and longitude\n    const locationData = {\n      name: newLocation.name,\n      category: newLocation.category,\n      latitude: parseFloat(newLocation.latitude),\n      longitude: parseFloat(newLocation.longitude)\n    };\n    // validate latitude and longitude\n    if (isNaN(locationData.latitude) || isNaN(locationData.longitude)) {\n      setAddError('Latitude and Longitude must be valid numbers.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8000/locations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(locationData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Failed to add location');\n      }\n      const result = await response.json();\n      setAddStatus('Location added successfully!');\n      setNewLocation({\n        name: '',\n        category: '',\n        latitude: '',\n        longitude: ''\n      });\n      fetchLocations();\n    } catch (error) {\n      console.error('Error adding location:', error);\n      setAddError(error.message || 'Error adding location');\n    }\n  };\n  // select file from local machine\n  const handleFileSelect = e => {\n    const file = e.target.files[0];\n    if (file) {\n      if (!file.name.endsWith('.csv')) {\n        setUploadStatus('Please select a CSV file');\n        setUploadErrors([]);\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setUploadStatus('File selected: ' + file.name);\n      setUploadErrors([]);\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setUploadStatus('Please select a file first');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    // upload file to backend\n    try {\n      setUploadStatus('Uploading...');\n      setUploadErrors([]);\n      const response = await fetch('http://localhost:8000/import', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      if (result.error) {\n        setUploadStatus('Error: ' + result.error);\n        setUploadErrors([]);\n      } else {\n        setUploadStatus(`Successfully imported ${result.imported} locations`);\n        if (result.errors && result.errors.length > 0) {\n          setUploadErrors(result.errors);\n        }\n        if (fileInputRef.current) {\n          fileInputRef.current.value = '';\n        }\n        setSelectedFile(null);\n      }\n      fetchLocations();\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setUploadStatus('Error uploading file');\n      setUploadErrors([]);\n    }\n  };\n  // \n  const handleClearAll = async () => {\n    if (!window.confirm('Are you sure you want to delete all locations? This action cannot be undone.')) {\n      return;\n    }\n    // clear all locations\n    try {\n      const response = await fetch('http://localhost:8000/locations', {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to clear locations');\n      }\n      // Set the locations to an empty array\n      setLocations([]);\n      if (map.current && map.current.getSource('locations')) {\n        map.current.getSource('locations').setData({\n          type: 'FeatureCollection',\n          features: []\n        });\n      }\n      if (popupRef.current) {\n        popupRef.current.remove();\n        popupRef.current = null;\n      }\n      setSelectedLocation(null);\n    } catch (error) {\n      console.error('Error clearing locations:', error);\n      alert('Failed to clear locations. Please try again.');\n    }\n  };\n  const handleLocationClick = location => {\n    setSelectedLocation(location);\n\n    // Remove existing popup if any\n    if (popupRef.current) {\n      popupRef.current.remove();\n    }\n\n    // Create new popup\n    popupRef.current = new maplibregl.Popup({\n      offset: 25\n    }).setLngLat(location.geometry.coordinates).setHTML(`\n        <div class=\"p-2\">\n          <h3 class=\"font-bold\">${location.properties.name}</h3>\n          <p class=\"text-sm\">${location.properties.category}</p>\n          <p class=\"text-xs text-gray-600\">\n            Coordinates: ${location.geometry.coordinates[1]}, ${location.geometry.coordinates[0]}\n          </p>\n        </div>\n      `);\n\n    // Add popup to map\n    popupRef.current.addTo(map.current);\n\n    // Fly to location\n    map.current.flyTo({\n      center: location.geometry.coordinates,\n      zoom: 15,\n      essential: true\n    });\n  };\n\n  // Add new function to get current location\n  const getCurrentLocation = () => {\n    setIsGettingLocation(true);\n    if (!navigator.geolocation) {\n      setAddError('Geolocation is not supported by your browser');\n      setIsGettingLocation(false);\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setNewLocation({\n        ...newLocation,\n        latitude: latitude.toString(),\n        longitude: longitude.toString()\n      });\n      setIsGettingLocation(false);\n    }, error => {\n      setAddError('Unable to retrieve your location: ' + error.message);\n      setIsGettingLocation(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-7xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-gray-900 mb-6\",\n      children: [\"Location Tracker by \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: \"color:#5ba7d2\",\n        children: \"GEOINT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 81\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mapContainer,\n        className: \"map-container mb-6\",\n        style: {\n          height: '500px'\n        },\n        id: \"map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMapStyle,\n        className: \"absolute top-4 right-4 bg-white px-4 py-2 rounded-md shadow-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-gray-900 mb-4\",\n            children: \"Add New Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Name\",\n              value: newLocation.name,\n              onChange: e => setNewLocation({\n                ...newLocation,\n                name: e.target.value\n              }),\n              className: \"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Category\",\n              value: newLocation.category,\n              onChange: e => setNewLocation({\n                ...newLocation,\n                category: e.target.value\n              }),\n              className: \"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                placeholder: \"Latitude\",\n                value: newLocation.latitude,\n                onChange: e => setNewLocation({\n                  ...newLocation,\n                  latitude: e.target.value\n                }),\n                className: \"flex-1 px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                placeholder: \"Longitude\",\n                value: newLocation.longitude,\n                onChange: e => setNewLocation({\n                  ...newLocation,\n                  longitude: e.target.value\n                }),\n                className: \"flex-1 px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: getCurrentLocation,\n                disabled: isGettingLocation,\n                className: `px-4 py-2 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-offset-2 ${isGettingLocation ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700 focus:ring-blue-500'}`,\n                children: isGettingLocation ? 'Getting Location...' : '📍'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\",\n              children: \"Add Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this), addStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 p-2 bg-green-100 text-green-800 rounded\",\n              children: addStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this), addError && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 p-2 bg-red-100 text-red-800 rounded\",\n              children: addError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-gray-900 mb-4\",\n            children: \"Import Locations from CSV(POI)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ref: fileInputRef,\n                type: \"file\",\n                accept: \".csv\",\n                onChange: handleFileSelect,\n                className: \"flex-1 px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleUpload,\n                disabled: !selectedFile,\n                className: `px-6 py-2 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-offset-2 ${selectedFile ? 'bg-green-600 hover:bg-green-700 focus:ring-green-500' : 'bg-gray-400 cursor-not-allowed'}`,\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-4 rounded-md ${uploadStatus.includes('Error') ? 'bg-red-50 text-red-700' : 'bg-green-50 text-green-700'}`,\n              children: uploadStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this), uploadErrors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-orange-50 p-4 rounded-md text-orange-700\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-semibold mb-2\",\n                children: \"Import Warnings:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-disc list-inside space-y-1\",\n                children: uploadErrors.map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: error\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: \"CSV format: Name,Category,Latitude,Longitude\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-900 mb-4\",\n          children: \"Locations List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), locations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClearAll,\n            className: \"w-full bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2\",\n            children: \"Clear All Locations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-3\",\n          children: locations.map(loc => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleLocationClick(loc),\n            className: `p-4 rounded-md hover:bg-gray-100 transition-colors cursor-pointer ${(selectedLocation === null || selectedLocation === void 0 ? void 0 : selectedLocation.properties.id) === loc.properties.id ? 'bg-blue-50 border border-blue-200' : 'bg-gray-50'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium text-gray-900\",\n              children: loc.properties.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: loc.properties.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: [\"Coordinates: \", loc.geometry.coordinates[1], \", \", loc.geometry.coordinates[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this)]\n          }, loc.properties.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GKmUdrSTS2lhAmNzRSJmo98jCpE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","maplibregl","jsxDEV","_jsxDEV","App","_s","mapContainer","fileInputRef","locations","setLocations","newLocation","setNewLocation","name","category","latitude","longitude","uploadStatus","setUploadStatus","uploadErrors","setUploadErrors","selectedFile","setSelectedFile","addStatus","setAddStatus","addError","setAddError","selectedLocation","setSelectedLocation","isGettingLocation","setIsGettingLocation","popupRef","mapStyle","setMapStyle","MAPTILER_KEY","map","mapStyles","normal","satellite","current","Map","container","style","center","zoom","pitch","bearing","canvasContextAttributes","antialias","on","fetchLocations","layers","getStyle","labelLayerId","i","length","type","layout","id","remove","toggleMapStyle","addSource","data","features","url","addLayer","Popup","offset","setLngLat","geometry","coordinates","setHTML","properties","addTo","response","fetch","json","getSource","setData","source","paint","error","console","handleSubmit","e","preventDefault","locationData","parseFloat","isNaN","method","headers","body","JSON","stringify","ok","errorData","Error","detail","result","message","handleFileSelect","file","target","files","endsWith","handleUpload","formData","FormData","append","imported","errors","value","handleClearAll","window","confirm","alert","handleLocationClick","location","flyTo","essential","getCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","height","onClick","onSubmit","placeholder","onChange","disabled","accept","includes","index","loc","_c","$RefreshReg$"],"sources":["/Users/politemakwala/Location-Tracker-by-GEOINT/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\n // main app component\nfunction App() {\n  const mapContainer = useRef(null);\n \n  const fileInputRef = useRef(null);\n  const [locations, setLocations] = useState([]);\n  const [newLocation, setNewLocation] = useState({ name: '', category: '', latitude: '', longitude: '' });\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [uploadErrors, setUploadErrors] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [addStatus, setAddStatus] = useState('');\n  const [addError, setAddError] = useState('');\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [isGettingLocation, setIsGettingLocation] = useState(false);\n  const popupRef = useRef(null);\n  const [mapStyle, setMapStyle] = useState('satellite'); // Changed from 'normal' to 'satellite'\n  const MAPTILER_KEY = 'Mzz4D0DNC0EOqwMrDxc6';\n  const map = useRef(null);\n\n  const mapStyles = {\n    normal: 'https://demotiles.maplibre.org/style.json',\n    satellite: `https://api.maptiler.com/maps/basic-v2/style.json?key=${MAPTILER_KEY}`\n  };\n\n  useEffect(() => {\n    if (map.current) return;\n\n    map.current = new maplibregl.Map({\n      container: mapContainer.current,\n      style: mapStyles[mapStyle],\n      center: [28.0473, -26.1072], // Center on Sandton\n      zoom: 15.5,\n      pitch: 45,\n      bearing: -17.6,\n      container: 'map',\n      canvasContextAttributes: {antialias: true}\n    });\n\n    map.current.on('load', () => {\n      fetchLocations();\n      const layers = map.current.getStyle().layers;\n\n      let labelLayerId;\n      for (let i = 0; i < layers.length; i++) {\n          if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {\n              labelLayerId = layers[i].id;\n              break;\n          }\n      }\n    \n    });\n\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n      }\n    };\n  }, []);\n   // toggle map style between normal and satellite view\n  const toggleMapStyle = () => {\n   \n    \n    // Remove existing source and layer if they exist\n    const layers = map.current.getStyle().layers;\n\n    let labelLayerId;\n    for (let i = 0; i < layers.length; i++) {\n        if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {\n            labelLayerId = layers[i].id;\n            break;\n        }\n    }\n    \n    // Re-add the locations layer after style change\n    map.current.on('style.load', () => {\n      if (locations.length > 0) {\n        map.current.addSource('locations', {\n          type: 'fill-extrusion',\n          data: {\n            type: 'FeatureCollection',\n            features: locations\n          }\n        });\n\n        map.current.addSource('openmaptiles', {\n          url: `https://api.maptiler.com/tiles/v3/tiles.json?key=${MAPTILER_KEY}`,\n          type: 'vector',\n      });\n\n      \n        map.current.addLayer({\n         'id': '3d-buildings',\n            'source': 'openmaptiles',\n            'source-layer': 'building',\n            'type': 'fill-extrusion',\n            'minzoom': 15,\n            'filter': ['!=', ['get', 'hide_3d'], true],\n            'paint': {\n                'fill-extrusion-color': [\n                    'interpolate',\n                    ['linear'],\n                    ['get', 'render_height'], 6, 'lightgray', 200, 'royalblue', 400, 'lightblue'\n                ],\n                'fill-extrusion-height': [\n                    'interpolate',\n                    ['linear'],\n                    ['zoom'],\n                    15,\n                    0,\n                    16,\n                    ['get', 'render_height']\n                ],\n                'fill-extrusion-base': ['case',\n                    ['>=', ['get', 'zoom'], 16],\n                    ['get', 'render_min_height'], 0\n                ]\n            }\n        });\n\n        // If there's a selected location, re-add its popup\n        if (selectedLocation) {\n          if (popupRef.current) {\n            popupRef.current.remove();\n          }\n          popupRef.current = new maplibregl.Popup({ offset: 25 })\n            .setLngLat(selectedLocation.geometry.coordinates)\n            .setHTML(`\n              <div class=\"p-2\">\n                <h3 class=\"font-bold\">${selectedLocation.properties.name}</h3>\n                <p class=\"text-sm\">${selectedLocation.properties.category}</p>\n                <p class=\"text-xs text-gray-600\">\n                  Coordinates: ${selectedLocation.geometry.coordinates[1]}, ${selectedLocation.geometry.coordinates[0]}\n                </p>\n              </div>\n            `);\n          popupRef.current.addTo(map.current);\n        }\n      }\n    });\n  };\n  // fetch locations from backend and display on map\n  const fetchLocations = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/locations/geojson');\n      const data = await response.json();\n      setLocations(data.features);\n\n      if (map.current) {\n        if (map.current.getSource('locations')) {\n          map.current.getSource('locations').setData(data);\n        } else {\n          map.current.addSource('locations', {\n            type: 'geojson',\n            data: data\n          });\n\n          map.current.addLayer({\n            id: 'locations',\n            type: 'circle',\n            source: 'locations',\n            paint: {\n              'circle-radius': 6,\n              'circle-color': '#B42222'\n            }\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching locations:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setAddStatus('');\n    setAddError('');\n    \n    // Simple validation of all fields\n    if (!newLocation.name || !newLocation.category || !newLocation.latitude || !newLocation.longitude) {\n      setAddError('All fields are required.');\n      return;\n    }\n    \n    // Convert string values to numbers for latitude and longitude\n    const locationData = {\n      name: newLocation.name,\n      category: newLocation.category,\n      latitude: parseFloat(newLocation.latitude),\n      longitude: parseFloat(newLocation.longitude)\n    };\n    // validate latitude and longitude\n    if (isNaN(locationData.latitude) || isNaN(locationData.longitude)) {\n      setAddError('Latitude and Longitude must be valid numbers.');\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:8000/locations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(locationData)\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Failed to add location');\n      }\n\n      const result = await response.json();\n      setAddStatus('Location added successfully!');\n      setNewLocation({ name: '', category: '', latitude: '', longitude: '' });\n      fetchLocations();\n    } catch (error) {\n      console.error('Error adding location:', error);\n      setAddError(error.message || 'Error adding location');\n    }\n  };\n  // select file from local machine\n  const handleFileSelect = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (!file.name.endsWith('.csv')) {\n        setUploadStatus('Please select a CSV file');\n        setUploadErrors([]);\n        setSelectedFile(null);\n        return;\n      }\n      setSelectedFile(file);\n      setUploadStatus('File selected: ' + file.name);\n      setUploadErrors([]);\n    }\n  };\n  \n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setUploadStatus('Please select a file first');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    // upload file to backend\n    try {\n      setUploadStatus('Uploading...');\n      setUploadErrors([]);\n      const response = await fetch('http://localhost:8000/import', {\n        method: 'POST',\n        body: formData,\n      });\n      const result = await response.json();\n      \n      if (result.error) {\n        setUploadStatus('Error: ' + result.error);\n        setUploadErrors([]);\n      } else {\n        setUploadStatus(`Successfully imported ${result.imported} locations`);\n        if (result.errors && result.errors.length > 0) {\n          setUploadErrors(result.errors);\n        }\n        if (fileInputRef.current) {\n          fileInputRef.current.value = '';\n        }\n        setSelectedFile(null);\n      }\n      fetchLocations();\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setUploadStatus('Error uploading file');\n      setUploadErrors([]);\n    }\n  };\n   // \n  const handleClearAll = async () => {\n    if (!window.confirm('Are you sure you want to delete all locations? This action cannot be undone.')) {\n      return;\n    }\n   // clear all locations\n    try {\n      const response = await fetch('http://localhost:8000/locations', {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to clear locations');\n      }\n      // Set the locations to an empty array\n      setLocations([]);\n      if (map.current && map.current.getSource('locations')) {\n        map.current.getSource('locations').setData({\n          type: 'FeatureCollection',\n          features: []\n        });\n      }\n      if (popupRef.current) {\n        popupRef.current.remove();\n        popupRef.current = null;\n      }\n      setSelectedLocation(null);\n    } catch (error) {\n      console.error('Error clearing locations:', error);\n      alert('Failed to clear locations. Please try again.');\n    }\n  };\n\n  const handleLocationClick = (location) => {\n    setSelectedLocation(location);\n    \n    // Remove existing popup if any\n    if (popupRef.current) {\n      popupRef.current.remove();\n    }\n\n    // Create new popup\n    popupRef.current = new maplibregl.Popup({ offset: 25 })\n      .setLngLat(location.geometry.coordinates)\n      .setHTML(`\n        <div class=\"p-2\">\n          <h3 class=\"font-bold\">${location.properties.name}</h3>\n          <p class=\"text-sm\">${location.properties.category}</p>\n          <p class=\"text-xs text-gray-600\">\n            Coordinates: ${location.geometry.coordinates[1]}, ${location.geometry.coordinates[0]}\n          </p>\n        </div>\n      `);\n\n    // Add popup to map\n    popupRef.current.addTo(map.current);\n\n    // Fly to location\n    map.current.flyTo({\n      center: location.geometry.coordinates,\n      zoom: 15,\n      essential: true\n    });\n  }\n\n  // Add new function to get current location\n  const getCurrentLocation = () => {\n    setIsGettingLocation(true);\n    if (!navigator.geolocation) {\n      setAddError('Geolocation is not supported by your browser');\n      setIsGettingLocation(false);\n      return;\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const { latitude, longitude } = position.coords;\n        setNewLocation({\n          ...newLocation,\n          latitude: latitude.toString(),\n          longitude: longitude.toString()\n        });\n        setIsGettingLocation(false);\n      },\n      (error) => {\n        setAddError('Unable to retrieve your location: ' + error.message);\n        setIsGettingLocation(false);\n      }\n    );\n  };\n\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto\">\n      <h1 className=\"text-3xl font-bold text-gray-900 mb-6\">Location Tracker by <span style=\"color:#5ba7d2\">GEOINT</span></h1>\n      \n      <div className=\"relative\">\n        <div ref={mapContainer} className=\"map-container mb-6\" style={{ height: '500px' }} id=\"map\"/>\n        <button\n          onClick={toggleMapStyle}\n          className=\"absolute top-4 right-4 bg-white px-4 py-2 rounded-md shadow-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        >\n         \n        </button>\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"space-y-6\">\n          <div className=\"bg-white p-6 rounded-lg shadow-sm\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Add New Location</h2>\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <input\n                type=\"text\"\n                placeholder=\"Name\"\n                value={newLocation.name}\n                onChange={(e) => setNewLocation({ ...newLocation, name: e.target.value })}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Category\"\n                value={newLocation.category}\n                onChange={(e) => setNewLocation({ ...newLocation, category: e.target.value })}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n              <div className=\"flex gap-2\">\n                <input\n                  type=\"number\"\n                  placeholder=\"Latitude\"\n                  value={newLocation.latitude}\n                  onChange={(e) => setNewLocation({ ...newLocation, latitude: e.target.value })}\n                  className=\"flex-1 px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n                <input\n                  type=\"number\"\n                  placeholder=\"Longitude\"\n                  value={newLocation.longitude}\n                  onChange={(e) => setNewLocation({ ...newLocation, longitude: e.target.value })}\n                  className=\"flex-1 px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={getCurrentLocation}\n                  disabled={isGettingLocation}\n                  className={`px-4 py-2 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-offset-2 ${\n                    isGettingLocation \n                      ? 'bg-gray-400 cursor-not-allowed' \n                      : 'bg-blue-600 hover:bg-blue-700 focus:ring-blue-500'\n                  }`}\n                >\n                  {isGettingLocation ? 'Getting Location...' : '📍'}\n                </button>\n              </div>\n              <button \n                type=\"submit\"\n                className=\"w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n              >\n                Add Location\n              </button>\n              {addStatus && (\n                <div className=\"mt-2 p-2 bg-green-100 text-green-800 rounded\">{addStatus}</div>\n              )}\n              {addError && (\n                <div className=\"mt-2 p-2 bg-red-100 text-red-800 rounded\">{addError}</div>\n              )}\n            </form>\n          </div>\n       \n          <div className=\"bg-white p-6 rounded-lg shadow-sm\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Import Locations from CSV(POI)</h2>\n            <div className=\"space-y-4\">\n              <div className=\"flex gap-4\">\n                <input\n                  ref={fileInputRef}\n                  type=\"file\"\n                  accept=\".csv\"\n                  onChange={handleFileSelect}\n                  className=\"flex-1 px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n                <button\n                  onClick={handleUpload}\n                  disabled={!selectedFile}\n                  className={`px-6 py-2 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-offset-2 ${\n                    selectedFile \n                      ? 'bg-green-600 hover:bg-green-700 focus:ring-green-500' \n                      : 'bg-gray-400 cursor-not-allowed'\n                  }`}\n                >\n                  Upload\n                </button>\n              </div>\n              \n              {uploadStatus && (\n                <div className={`p-4 rounded-md ${\n                  uploadStatus.includes('Error') \n                    ? 'bg-red-50 text-red-700' \n                    : 'bg-green-50 text-green-700'\n                }`}>\n                  {uploadStatus}\n                </div>\n              )}\n              \n              {uploadErrors.length > 0 && (\n                <div className=\"bg-orange-50 p-4 rounded-md text-orange-700\">\n                  <h4 className=\"font-semibold mb-2\">Import Warnings:</h4>\n                  <ul className=\"list-disc list-inside space-y-1\">\n                    {uploadErrors.map((error, index) => (\n                      <li key={index}>{error}</li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n              \n              <div className=\"text-sm text-gray-500\">\n                CSV format: Name,Category,Latitude,Longitude\n              </div>\n            </div>\n          </div>\n        </div>\n \n        <div className=\"bg-white p-6 rounded-lg shadow-sm\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Locations List</h2>\n          {locations.length > 0 && (\n            <div className=\"mb-4\">\n              <button\n                onClick={handleClearAll}\n                className=\"w-full bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2\"\n              >\n                Clear All Locations\n              </button>\n            </div>\n          )}\n          <ul className=\"space-y-3\">\n            {locations.map(loc => (\n              <li \n                key={loc.properties.id}\n                onClick={() => handleLocationClick(loc)}\n                className={`p-4 rounded-md hover:bg-gray-100 transition-colors cursor-pointer ${\n                  selectedLocation?.properties.id === loc.properties.id \n                    ? 'bg-blue-50 border border-blue-200' \n                    : 'bg-gray-50'\n                }`}\n              >\n                <div className=\"font-medium text-gray-900\">{loc.properties.name}</div>\n                <div className=\"text-sm text-gray-600\">{loc.properties.category}</div>\n                <div className=\"text-sm text-gray-500\">\n                  Coordinates: {loc.geometry.coordinates[1]}, {loc.geometry.coordinates[0]}\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}